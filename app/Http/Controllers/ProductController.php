<?php

namespace App\Http\Controllers;

use App\Models\Product;
use App\Models\Protype;
use Illuminate\Http\Request;
use ImageKit\ImageKit; // р╣Ар╕Юр╕┤р╣Ир╕бр╕Ър╕гр╕гр╕Чр╕▒р╕Фр╕Щр╕╡р╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╣Ар╕гр╕╡р╕вр╕Бр╣Гр╕Кр╣Й ImageKit SDK
use Illuminate\Support\Facades\Log; // р╣Ар╕Юр╕┤р╣Ир╕бр╕Ър╕гр╕гр╕Чр╕▒р╕Фр╕Щр╕╡р╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╣Гр╕Кр╣Й Log

class ProductController extends Controller
{
    protected $imageKit;

    public function __construct()
    {
        // р╕кр╕гр╣Йр╕▓р╕З instance р╕Вр╕нр╕З ImageKit р╣Бр╕ер╕░р╕Фр╕╢р╕З credentials р╕Ир╕▓р╕Б .env
        $this->imageKit = new ImageKit(
            config('imagekit.public_key'),
            config('imagekit.private_key'),
            config('imagekit.url_endpoint')
        );
    }
    
    // р╣Бр╕кр╕Фр╕Зр╕гр╕▓р╕вр╕Бр╕▓р╕гр╕кр╕┤р╕Щр╕Др╣Йр╕▓
    public function index()
    {
        $types = Protype::all();
        $products = Product::paginate(10); // р╣Бр╕Ър╣Ир╕Зр╕лр╕Щр╣Йр╕▓
        return view('layouts.products.product', compact('products', 'types'));
    }

    // р╕Яр╕нр╕гр╣Мр╕бр╣Ар╕Юр╕┤р╣Ир╕бр╕кр╕┤р╕Щр╕Др╣Йр╕▓
    public function create()
    {
        $types = Protype::all(); // р╕Фр╕╢р╕Зр╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
        return view('layouts.products.add', compact('types'));
    }

    // р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Гр╕лр╕бр╣И
    public function store(Request $request)
    {
        $request->validate([
            'pro_name' => 'required|string|max:50',
            'price' => 'required|numeric',
            'type_id' => 'required|integer',
            'image' => 'required|image|mimes:jpeg,png,jpg,gif,svg',
        ]);
    
        $data = $request->only('pro_name', 'price', 'type_id');
        $product = Product::create($data);
    
        if ($request->hasFile('image')) {
            $image = $request->file('image');
            $extension = $image->getClientOriginalExtension();
            $filename = $product->pro_id . '.' . $extension;
    
            // ЁЯФе р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Др╕Ыр╣Гр╕Кр╣Йр╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╕Фр╣Йр╕зр╕в ImageKit
            $uploadResult = $this->imageKit->uploadFile([
                'file' => base64_encode(file_get_contents($image->getRealPath())),
                'fileName' => $filename,
                'folder' => '/products' // р╕Ир╕▒р╕Фр╣Ар╕Бр╣Зр╕Ър╣Гр╕Щр╣Вр╕Яр╕ер╣Ар╕Фр╕нр╕гр╣М products р╕Ър╕Щ ImageKit
            ]);
    
            if ($uploadResult['success']) {
                // р╕нр╕▒р╕Ыр╣Ар╕Фр╕Х URL р╕Вр╕нр╕Зр╕гр╕╣р╕Ыр╕ар╕▓р╕Юр╕ер╕Зр╣Гр╕Щр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е
                $product->image = $uploadResult['result']['url'];
                $product->save();
            } else {
                Log::error('ImageKit upload failed: ' . json_encode($uploadResult['error']));
                return redirect()->back()->with('error', 'р╕Бр╕▓р╕гр╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╕гр╕╣р╕Ыр╕ар╕▓р╕Юр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з');
            }
        }
    
        return redirect()->route('product.index')->with('success', 'р╣Ар╕Юр╕┤р╣Ир╕бр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕вр╣Бр╕ер╣Йр╕з');
    }

    public function filter(Request $request)
    {
        $typeId = $request->input('type_id');

        $query = Product::with('type');

        if ($typeId) {
            $query->where('type_id', $typeId);
        }

        $products = $query->paginate(12);
        $types = Protype::all();

        return view('layouts.products.product', compact('products', 'types'));
    }

    // edit
    public function edit($pro_id)
    {
        $product = Product::with('type')->findOrFail($pro_id);
        $types = Protype::all(); // р╕Цр╣Йр╕▓р╕бр╕╡р╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Гр╕лр╣Йр╣Ар╕ер╕╖р╕нр╕Б
        return view('layouts.products.edit', compact('product', 'types'));
    }

    public function update(Request $request, $pro_id)
    {
        $request->validate([
            'pro_name' => 'required|string|max:255',
            'price' => 'required|numeric',
            'type_id' => 'required|exists:protype,type_id',
            'image' => 'nullable|image|mimes:jpg,jpeg,png',
        ]);
    
        $product = Product::findOrFail($pro_id);
        $product->pro_name = $request->pro_name;
        $product->price = $request->price;
        $product->type_id = $request->type_id;
    
        if ($request->hasFile('image')) {
            // ЁЯФе р╕ер╕Ър╣Др╕Яр╕ер╣Мр╣Ар╕Бр╣Ир╕▓р╕Ир╕▓р╕Б ImageKit
            if ($product->image) {
                // р╕Фр╕╢р╕З File ID р╕Ир╕▓р╕Б URL р╕Чр╕╡р╣Ир╣Ар╕Бр╣Зр╕Ър╣Др╕зр╣Й
                $urlParts = explode('/', rtrim($product->image, '/'));
                $fileId = end($urlParts);
                
                try {
                    $this->imageKit->deleteFile($fileId);
                } catch (\Exception $e) {
                    Log::error("Failed to delete file from ImageKit: " . $e->getMessage());
                    // р╕нр╕▓р╕Ир╕Ир╕░р╣Др╕бр╣Ир╕Хр╣Йр╕нр╕Зр╕лр╕вр╕╕р╕Фр╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щ р╣Бр╕Хр╣Ир╣Гр╕лр╣Йр╕Ър╕▒р╕Щр╕Чр╕╢р╕Б log р╣Др╕зр╣Й
                }
            }
    
            // ЁЯУж р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕гр╕╣р╕Ыр╣Гр╕лр╕бр╣Ир╣Др╕Ыр╕Чр╕╡р╣И ImageKit
            $image = $request->file('image');
            $extension = $image->getClientOriginalExtension();
            $filename = $product->pro_id . '.' . $extension;
            
            $uploadResult = $this->imageKit->uploadFile([
                'file' => base64_encode(file_get_contents($image->getRealPath())),
                'fileName' => $filename,
                'folder' => '/products'
            ]);
    
            if ($uploadResult['success']) {
                $product->image = $uploadResult['result']['url'];
            } else {
                Log::error('ImageKit upload failed: ' . json_encode($uploadResult['error']));
                return redirect()->back()->with('error', 'р╕Бр╕▓р╕гр╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╕гр╕╣р╕Ыр╕ар╕▓р╕Юр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з');
            }
        }
    
        $product->save();
    
        return redirect()->route('product.index')->with('success', 'р╣Бр╕Бр╣Йр╣Др╕Вр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕вр╣Бр╕ер╣Йр╕з');
    }

    public function destroy($pro_id)
    {
        $product = Product::findOrFail($pro_id);

        // ЁЯФе р╕ер╕Ър╣Др╕Яр╕ер╣Мр╕Ир╕▓р╕Б ImageKit
        if ($product->image) {
            // р╕Фр╕╢р╕З File ID р╕Ир╕▓р╕Б URL р╕Чр╕╡р╣Ир╣Ар╕Бр╣Зр╕Ър╣Др╕зр╣Й
            $urlParts = explode('/', rtrim($product->image, '/'));
            $fileId = end($urlParts);
            
            try {
                $this->imageKit->deleteFile($fileId);
            } catch (\Exception $e) {
                Log::error("Failed to delete file from ImageKit: " . $e->getMessage());
                // р╕нр╕▓р╕Ир╕Ир╕░р╣Др╕бр╣Ир╕Хр╣Йр╕нр╕Зр╕лр╕вр╕╕р╕Фр╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щ
            }
        }

        $product->delete();

        return redirect()->route('product.index')->with('success', 'р╕ер╕Ър╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕кр╕│р╣Ар╕гр╣Зр╕Ир╣Бр╕ер╣Йр╕з');
    }
}